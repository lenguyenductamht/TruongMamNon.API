// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TruongMamNon.BackendApi.Data.EF;

#nullable disable

namespace TruongMamNon.BackendApi.Data.Migrations
{
    [DbContext(typeof(TruongMamNonDbContext))]
    [Migration("20221208115200_UpdateData")]
    partial class UpdateData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ChiTietPhieuNhapThucPham", b =>
                {
                    b.Property<long>("MaPhieuNhapThucPham")
                        .HasColumnType("bigint");

                    b.Property<int>("MaThucPham")
                        .HasColumnType("int");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("PhieuXuatThucPhamMaPhieuXuatThucPham")
                        .HasColumnType("bigint");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("MaPhieuNhapThucPham", "MaThucPham");

                    b.HasIndex("MaThucPham");

                    b.HasIndex("PhieuXuatThucPhamMaPhieuXuatThucPham");

                    b.ToTable("ChiTietPhieuNhapThucPhams", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ChiTietPhieuXuatThucPham", b =>
                {
                    b.Property<long>("MaPhieuXuatThucPham")
                        .HasColumnType("bigint");

                    b.Property<int>("MaThucPham")
                        .HasColumnType("int");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("MaPhieuXuatThucPham", "MaThucPham");

                    b.HasIndex("MaThucPham");

                    b.ToTable("ChiTietPhieuXuatThucPhams", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ChucVu", b =>
                {
                    b.Property<int>("MaChucVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChucVu"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaLoaiNhanSu")
                        .HasColumnType("int");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaChucVu");

                    b.HasIndex("MaLoaiNhanSu");

                    b.ToTable("ChucVus", (string)null);

                    b.HasData(
                        new
                        {
                            MaChucVu = 1,
                            GhiChu = "",
                            MaLoaiNhanSu = 1,
                            TenChucVu = "Hiệu trưởng"
                        },
                        new
                        {
                            MaChucVu = 2,
                            GhiChu = "",
                            MaLoaiNhanSu = 1,
                            TenChucVu = "Phó hiệu trưởng"
                        },
                        new
                        {
                            MaChucVu = 3,
                            GhiChu = "",
                            MaLoaiNhanSu = 4,
                            TenChucVu = "Trưởng phòng"
                        },
                        new
                        {
                            MaChucVu = 4,
                            GhiChu = "",
                            MaLoaiNhanSu = 4,
                            TenChucVu = "Phó trưởng phòng"
                        },
                        new
                        {
                            MaChucVu = 5,
                            GhiChu = "",
                            MaLoaiNhanSu = 2,
                            TenChucVu = "Nhân viên y tế"
                        },
                        new
                        {
                            MaChucVu = 6,
                            GhiChu = "",
                            MaLoaiNhanSu = 2,
                            TenChucVu = "Nhân viên khác"
                        },
                        new
                        {
                            MaChucVu = 7,
                            GhiChu = "",
                            MaLoaiNhanSu = 2,
                            TenChucVu = "Nhân viên kế toán"
                        },
                        new
                        {
                            MaChucVu = 8,
                            GhiChu = "",
                            MaLoaiNhanSu = 2,
                            TenChucVu = "Nhân viên văn thư"
                        },
                        new
                        {
                            MaChucVu = 9,
                            GhiChu = "",
                            MaLoaiNhanSu = 2,
                            TenChucVu = "Nhân viên bảo vệ"
                        },
                        new
                        {
                            MaChucVu = 10,
                            GhiChu = "",
                            MaLoaiNhanSu = 2,
                            TenChucVu = "Nhân viên bếp"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.DanhMucThucDon", b =>
                {
                    b.Property<int>("MaDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhMuc"), 1L, 1);

                    b.Property<double>("ChatBeo")
                        .HasColumnType("float");

                    b.Property<double>("ChatBot")
                        .HasColumnType("float");

                    b.Property<double>("ChatDam")
                        .HasColumnType("float");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NangLuong")
                        .HasColumnType("float");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ThoiGian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DanhMucThucDons", (string)null);

                    b.HasData(
                        new
                        {
                            MaDanhMuc = 1,
                            ChatBeo = 10.0,
                            ChatBot = 30.0,
                            ChatDam = 20.0,
                            GhiChu = "",
                            NangLuong = 100.0,
                            TenDanhMuc = "Thực đơn lớp mầm bữa sáng",
                            ThoiGian = "07:30"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.DanhMucThucPham", b =>
                {
                    b.Property<int>("MaDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhMuc"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DanhMucThucPhams", (string)null);

                    b.HasData(
                        new
                        {
                            MaDanhMuc = 1,
                            GhiChu = "",
                            TenDanhMuc = "Ngũ cốc"
                        },
                        new
                        {
                            MaDanhMuc = 2,
                            GhiChu = "",
                            TenDanhMuc = "Thịt và các sản phẩm từ thịt"
                        },
                        new
                        {
                            MaDanhMuc = 3,
                            GhiChu = "",
                            TenDanhMuc = "Thủy sản và sản phẩm thủy sản"
                        },
                        new
                        {
                            MaDanhMuc = 4,
                            GhiChu = "",
                            TenDanhMuc = "Rau, củ, quả và sản phẩm rau, củ, quả"
                        },
                        new
                        {
                            MaDanhMuc = 5,
                            GhiChu = "",
                            TenDanhMuc = "Trứng và các sản phẩm từ trứng"
                        },
                        new
                        {
                            MaDanhMuc = 6,
                            GhiChu = "",
                            TenDanhMuc = "Sữa tươi nguyên liệu"
                        },
                        new
                        {
                            MaDanhMuc = 7,
                            GhiChu = "",
                            TenDanhMuc = "Mật ong và các sản phẩm từ mật ong"
                        },
                        new
                        {
                            MaDanhMuc = 8,
                            GhiChu = "",
                            TenDanhMuc = "Gia vị"
                        },
                        new
                        {
                            MaDanhMuc = 9,
                            GhiChu = "",
                            TenDanhMuc = "Thực phẩm khác"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.DiemDanh", b =>
                {
                    b.Property<long>("MaDiemDanh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MaDiemDanh"), 1L, 1);

                    b.Property<string>("MaHocSinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDiemDanh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDiemDanh");

                    b.HasIndex("MaHocSinh");

                    b.ToTable("DiemDanhs", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.GiaoVienChuNhiem", b =>
                {
                    b.Property<string>("MaNhanSu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int");

                    b.HasKey("MaNhanSu", "MaLopHoc");

                    b.HasIndex("MaLopHoc");

                    b.ToTable("GiaoVienChuNhiems", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.HocSinh", b =>
                {
                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CMNDPhuHuynh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DanToc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiaChiPhuHuynh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailPhuHuynh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoKhau")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoTenPhuHuynh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LyDoNghiHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKhoiLop")
                        .HasColumnType("int");

                    b.Property<int?>("MaLopHoc")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("NamSinhPhuHuynh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayNhapHoc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NgheNghiepPhuHuynh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocTich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDTPhuHuynh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TonGiao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHocSinh");

                    b.HasIndex("MaKhoiLop");

                    b.HasIndex("MaLopHoc");

                    b.ToTable("HocSinhs", (string)null);

                    b.HasData(
                        new
                        {
                            MaHocSinh = "1",
                            CMNDPhuHuynh = "012345678910",
                            DanToc = "Kinh",
                            DiaChi = "HCM",
                            DiaChiPhuHuynh = "140 Lê trọng tấn",
                            EmailPhuHuynh = "lenguyenductamht@gmail.com",
                            GhiChu = "",
                            GioiTinh = "Nam",
                            HinhAnh = "",
                            Ho = "Lê Nguyễn Đại Đức",
                            HoKhau = "Long An",
                            HoTenPhuHuynh = "Lê Huỳnh Nam",
                            Id = 1,
                            LyDoNghiHoc = "",
                            MaKhoiLop = 4,
                            MaLopHoc = 1,
                            MatKhau = "Client@123",
                            NamSinhPhuHuynh = new DateTime(1968, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayCapNhat = new DateTime(2022, 12, 8, 18, 51, 59, 443, DateTimeKind.Local).AddTicks(1110),
                            NgayNhapHoc = new DateTime(2022, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgaySinh = new DateTime(2001, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgheNghiepPhuHuynh = "Tự do",
                            NoiSinh = "Long An",
                            QuocTich = "Việt Nam",
                            SDTPhuHuynh = "0123456789",
                            Ten = "Tâm",
                            TonGiao = "Không",
                            TrangThaiHoc = "Đang học",
                            TrangThaiTaiKhoan = "Kích hoạt"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.KhamSucKhoe", b =>
                {
                    b.Property<long>("MaKhamSucKhoe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MaKhamSucKhoe"), 1L, 1);

                    b.Property<double>("BMI")
                        .HasColumnType("float");

                    b.Property<string>("CacBenhRangHamMat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CacBenhTaiMuiHong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CacBenhVeMat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CanNang")
                        .HasColumnType("int");

                    b.Property<int>("ChieuCao")
                        .HasColumnType("int");

                    b.Property<string>("HamDuoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HamTren")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoHap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LamSangKhac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiTheLuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHocSinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MatPhaiCoKinh")
                        .HasColumnType("int");

                    b.Property<int>("MatPhaiKhongKinh")
                        .HasColumnType("int");

                    b.Property<int>("MatTraiCoKinh")
                        .HasColumnType("int");

                    b.Property<int>("MatTraiKhongKinh")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayKham")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhipTim")
                        .HasColumnType("int");

                    b.Property<int>("TaiPhaiNoiTham")
                        .HasColumnType("int");

                    b.Property<int>("TaiPhaiNoiThuong")
                        .HasColumnType("int");

                    b.Property<int>("TaiTraiNoiTham")
                        .HasColumnType("int");

                    b.Property<int>("TaiTraiNoiThuong")
                        .HasColumnType("int");

                    b.Property<int>("TamThu")
                        .HasColumnType("int");

                    b.Property<int>("TamTruong")
                        .HasColumnType("int");

                    b.Property<string>("TenDotKham")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThanKinhTamThan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanTietNieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuHoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuanHoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhamSucKhoe");

                    b.HasIndex("MaHocSinh");

                    b.ToTable("KhamSucKhoes", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.KhoiLop", b =>
                {
                    b.Property<int>("MaKhoiLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhoiLop"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhoiLop")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaKhoiLop");

                    b.ToTable("KhoiLops", (string)null);

                    b.HasData(
                        new
                        {
                            MaKhoiLop = 1,
                            GhiChu = "",
                            TenKhoiLop = "3-12 tháng - KL0312"
                        },
                        new
                        {
                            MaKhoiLop = 3,
                            GhiChu = "",
                            TenKhoiLop = "13-24 tháng - KL1324"
                        },
                        new
                        {
                            MaKhoiLop = 2,
                            GhiChu = "",
                            TenKhoiLop = "25-36 tháng - KL2536"
                        },
                        new
                        {
                            MaKhoiLop = 4,
                            GhiChu = "",
                            TenKhoiLop = "3-4 tuổi - KLM"
                        },
                        new
                        {
                            MaKhoiLop = 5,
                            GhiChu = "",
                            TenKhoiLop = "4-5 tuổi - KLC"
                        },
                        new
                        {
                            MaKhoiLop = 6,
                            GhiChu = "",
                            TenKhoiLop = "5-6 tuổi - KLL"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.LoaiNhanSu", b =>
                {
                    b.Property<int>("MaLoaiNhanSu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiNhanSu"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoaiNhanSu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaLoaiNhanSu");

                    b.ToTable("LoaiNhanSus", (string)null);

                    b.HasData(
                        new
                        {
                            MaLoaiNhanSu = 1,
                            GhiChu = "",
                            TenLoaiNhanSu = "Cán bộ quản lý"
                        },
                        new
                        {
                            MaLoaiNhanSu = 2,
                            GhiChu = "",
                            TenLoaiNhanSu = "Nhân viên"
                        },
                        new
                        {
                            MaLoaiNhanSu = 3,
                            GhiChu = "",
                            TenLoaiNhanSu = "Giáo viên"
                        },
                        new
                        {
                            MaLoaiNhanSu = 4,
                            GhiChu = "",
                            TenLoaiNhanSu = "Trưởng phó phòng/ban"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.LopHoc", b =>
                {
                    b.Property<int>("MaLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLop"), 1L, 1);

                    b.Property<decimal>("HocPhi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaKhoiLop")
                        .HasColumnType("int");

                    b.Property<int>("MaNienHoc")
                        .HasColumnType("int");

                    b.Property<int>("SiSoToiDa")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoiLop");

                    b.HasIndex("MaNienHoc");

                    b.ToTable("LopHocs", (string)null);

                    b.HasData(
                        new
                        {
                            MaLop = 1,
                            HocPhi = 0m,
                            MaKhoiLop = 4,
                            MaNienHoc = 4,
                            SiSoToiDa = 80,
                            TenLop = "Lớp mầm 1"
                        },
                        new
                        {
                            MaLop = 2,
                            HocPhi = 0m,
                            MaKhoiLop = 4,
                            MaNienHoc = 4,
                            SiSoToiDa = 80,
                            TenLop = "Lớp mầm 2"
                        },
                        new
                        {
                            MaLop = 3,
                            HocPhi = 0m,
                            MaKhoiLop = 4,
                            MaNienHoc = 4,
                            SiSoToiDa = 80,
                            TenLop = "Lớp mầm 3"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.MonAn", b =>
                {
                    b.Property<int>("MaMonAn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonAn"), 1L, 1);

                    b.Property<double>("ChatBeo")
                        .HasColumnType("float");

                    b.Property<double>("ChatBot")
                        .HasColumnType("float");

                    b.Property<double>("ChatDam")
                        .HasColumnType("float");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NangLuong")
                        .HasColumnType("float");

                    b.Property<string>("TenMonAn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaMonAn");

                    b.ToTable("MonAns", (string)null);

                    b.HasData(
                        new
                        {
                            MaMonAn = 1,
                            ChatBeo = 0.0,
                            ChatBot = 0.0,
                            ChatDam = 0.0,
                            GhiChu = "",
                            NangLuong = 0.0,
                            TenMonAn = "Chôm chôm"
                        },
                        new
                        {
                            MaMonAn = 2,
                            ChatBeo = 0.0,
                            ChatBot = 0.0,
                            ChatDam = 0.0,
                            GhiChu = "",
                            NangLuong = 0.0,
                            TenMonAn = "Thịt heo nạc xào đậu cô ve"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.MonAnThucPham", b =>
                {
                    b.Property<int>("MaMonAn")
                        .HasColumnType("int");

                    b.Property<int>("MaThucPham")
                        .HasColumnType("int");

                    b.Property<double>("SoLuong")
                        .HasColumnType("float");

                    b.HasKey("MaMonAn", "MaThucPham");

                    b.HasIndex("MaThucPham");

                    b.ToTable("MonAnThucPhams", (string)null);

                    b.HasData(
                        new
                        {
                            MaMonAn = 1,
                            MaThucPham = 1,
                            SoLuong = 0.050000000000000003
                        },
                        new
                        {
                            MaMonAn = 2,
                            MaThucPham = 3,
                            SoLuong = 0.050000000000000003
                        },
                        new
                        {
                            MaMonAn = 2,
                            MaThucPham = 2,
                            SoLuong = 0.050000000000000003
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.NhanSu", b =>
                {
                    b.Property<string>("MaNhanSu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DanToc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoKhau")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LyDoThoiViec")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MaChucVu")
                        .HasColumnType("int");

                    b.Property<int?>("MaKhoiLop")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiNhanSu")
                        .HasColumnType("int");

                    b.Property<int>("MaPhongBan")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("NgayCap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayCapNhat")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasMaxLength(200)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayVaoTruong")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiSinh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("QuocTich")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TonGiao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TrangThaiLamViec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhanSu");

                    b.HasIndex("MaChucVu");

                    b.HasIndex("MaKhoiLop");

                    b.HasIndex("MaLoaiNhanSu");

                    b.HasIndex("MaPhongBan");

                    b.ToTable("NhanSus", (string)null);

                    b.HasData(
                        new
                        {
                            MaNhanSu = "1",
                            CMND = "123456789",
                            DanToc = "Kinh",
                            DiaChi = "Tân Phú",
                            Email = "lenguyenductamcv@gmail.com",
                            GioiTinh = "Nam",
                            HinhAnh = "",
                            Ho = "Lê Nguyễn Đại Đức",
                            HoKhau = "Long An",
                            Id = 1,
                            LyDoThoiViec = "",
                            MaChucVu = 3,
                            MaLoaiNhanSu = 1,
                            MaPhongBan = 1,
                            MatKhau = "Admin@123",
                            NgayCapNhat = new DateTime(2022, 12, 8, 18, 51, 59, 443, DateTimeKind.Local).AddTicks(1326),
                            NgaySinh = new DateTime(2001, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayVaoTruong = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NoiSinh = "Long An",
                            QuocTich = "Việt Nam",
                            SoDienThoai = "123456789",
                            Ten = "Tâm",
                            TonGiao = "Không",
                            TrangThaiLamViec = "Đang làm",
                            TrangThaiTaiKhoan = "Kích hoạt"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.NhanSuPhanQuyen", b =>
                {
                    b.Property<string>("MaNhanSu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaQuyen")
                        .HasColumnType("int");

                    b.HasKey("MaNhanSu", "MaQuyen");

                    b.HasIndex("MaQuyen");

                    b.ToTable("NhanSuPhanQuyens", (string)null);

                    b.HasData(
                        new
                        {
                            MaNhanSu = "1",
                            MaQuyen = 1
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.NienHoc", b =>
                {
                    b.Property<int>("MaNienHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNienHoc"), 1L, 1);

                    b.Property<DateTime>("BatDauHK1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BatDauHK2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KetThucHK1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KetThucHK2")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNienHoc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaNienHoc");

                    b.ToTable("NienHocs", (string)null);

                    b.HasData(
                        new
                        {
                            MaNienHoc = 1,
                            BatDauHK1 = new DateTime(2019, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BatDauHK2 = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK1 = new DateTime(2020, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK2 = new DateTime(2020, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNienHoc = "Năm học 2019-2020"
                        },
                        new
                        {
                            MaNienHoc = 2,
                            BatDauHK1 = new DateTime(2020, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BatDauHK2 = new DateTime(2021, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK1 = new DateTime(2021, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK2 = new DateTime(2021, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNienHoc = "Năm học 2020-2021"
                        },
                        new
                        {
                            MaNienHoc = 3,
                            BatDauHK1 = new DateTime(2021, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BatDauHK2 = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK1 = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK2 = new DateTime(2022, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNienHoc = "Năm học 2021-2022"
                        },
                        new
                        {
                            MaNienHoc = 4,
                            BatDauHK1 = new DateTime(2022, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BatDauHK2 = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK1 = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KetThucHK2 = new DateTime(2023, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TenNienHoc = "Năm học 2022-2023"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhanQuyen", b =>
                {
                    b.Property<int>("MaQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaQuyen"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaQuyen");

                    b.ToTable("PhanQuyens", (string)null);

                    b.HasData(
                        new
                        {
                            MaQuyen = 1,
                            GhiChu = "",
                            TenQuyen = "Admin"
                        },
                        new
                        {
                            MaQuyen = 2,
                            GhiChu = "",
                            TenQuyen = "Cán bộ quản lý"
                        },
                        new
                        {
                            MaQuyen = 3,
                            GhiChu = "",
                            TenQuyen = "Nhân viên"
                        },
                        new
                        {
                            MaQuyen = 4,
                            GhiChu = "",
                            TenQuyen = "Nhân viên bếp"
                        },
                        new
                        {
                            MaQuyen = 5,
                            GhiChu = "",
                            TenQuyen = "Giáo viên"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuNhapThucPham", b =>
                {
                    b.Property<long>("MaPhieuNhapThucPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MaPhieuNhapThucPham"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNguoiNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhieuNhapThucPham");

                    b.HasIndex("MaNguoiNhap");

                    b.ToTable("PhieuNhapThucPhams", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuSoGiun", b =>
                {
                    b.Property<int>("MaThuocSoGiun")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySoGiun")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaThuocSoGiun", "NgaySoGiun", "MaHocSinh");

                    b.HasIndex("MaHocSinh");

                    b.ToTable("PhieuSoGiuns", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuTiemVaccine", b =>
                {
                    b.Property<int>("MaVaccine")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTiem")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaVaccine", "NgayTiem", "MaHocSinh");

                    b.HasIndex("MaHocSinh");

                    b.ToTable("PhieuTiemVaccines", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuUongVitamin", b =>
                {
                    b.Property<int>("MaVitamin")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayUong")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaVitamin", "NgayUong", "MaHocSinh");

                    b.HasIndex("MaHocSinh");

                    b.ToTable("PhieuUongVitamins", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuXuatThucPham", b =>
                {
                    b.Property<long>("MaPhieuXuatThucPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MaPhieuXuatThucPham"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNguoiXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhieuXuatThucPham");

                    b.HasIndex("MaNguoiXuat");

                    b.ToTable("PhieuXuatThucPhams", (string)null);
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhongBan", b =>
                {
                    b.Property<int>("MaPhongBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhongBan"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaPhongBan");

                    b.ToTable("PhongBans", (string)null);

                    b.HasData(
                        new
                        {
                            MaPhongBan = 1,
                            GhiChu = "",
                            TenPhongBan = "Văn phòng"
                        },
                        new
                        {
                            MaPhongBan = 2,
                            GhiChu = "",
                            TenPhongBan = "Phòng ban giám hiệu"
                        },
                        new
                        {
                            MaPhongBan = 3,
                            GhiChu = "",
                            TenPhongBan = "Phòng hành chính quản trị"
                        },
                        new
                        {
                            MaPhongBan = 4,
                            GhiChu = "",
                            TenPhongBan = "Phòng y tế"
                        },
                        new
                        {
                            MaPhongBan = 5,
                            GhiChu = "",
                            TenPhongBan = "Phòng giáo dục thể chất"
                        },
                        new
                        {
                            MaPhongBan = 6,
                            GhiChu = "",
                            TenPhongBan = "Phòng giáo dục nghệ thuật"
                        },
                        new
                        {
                            MaPhongBan = 7,
                            GhiChu = "",
                            TenPhongBan = "Phòng giáo viên"
                        },
                        new
                        {
                            MaPhongBan = 8,
                            GhiChu = "",
                            TenPhongBan = "Nhà bếp"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucDon", b =>
                {
                    b.Property<int>("MaThucDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThucDon"), 1L, 1);

                    b.Property<int>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("MaThucDon");

                    b.HasIndex("MaDanhMuc");

                    b.ToTable("ThucDons", (string)null);

                    b.HasData(
                        new
                        {
                            MaThucDon = 1,
                            MaDanhMuc = 1,
                            NgayApDung = new DateTime(2022, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2022, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucDonMonAn", b =>
                {
                    b.Property<int>("MaThucDon")
                        .HasColumnType("int");

                    b.Property<int>("MaMonAn")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaThucDon", "MaMonAn");

                    b.HasIndex("MaMonAn");

                    b.ToTable("ThucDonMonAns", (string)null);

                    b.HasData(
                        new
                        {
                            MaThucDon = 1,
                            MaMonAn = 1,
                            SoLuong = 1
                        },
                        new
                        {
                            MaThucDon = 1,
                            MaMonAn = 2,
                            SoLuong = 1
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucPham", b =>
                {
                    b.Property<int>("MaThucPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThucPham"), 1L, 1);

                    b.Property<double>("ChatBeo")
                        .HasColumnType("float");

                    b.Property<double>("ChatBot")
                        .HasColumnType("float");

                    b.Property<double>("ChatDam")
                        .HasColumnType("float");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<double>("NangLuong")
                        .HasColumnType("float");

                    b.Property<string>("TenThucPham")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("TonKho")
                        .HasColumnType("float");

                    b.HasKey("MaThucPham");

                    b.HasIndex("MaDanhMuc");

                    b.ToTable("ThucPhams", (string)null);

                    b.HasData(
                        new
                        {
                            MaThucPham = 1,
                            ChatBeo = 0.0,
                            ChatBot = 16400.0,
                            ChatDam = 1500.0,
                            DonViTinh = "Kg",
                            HinhAnh = "",
                            MaDanhMuc = 4,
                            NangLuong = 72000.0,
                            TenThucPham = "Chôm chôm",
                            TonKho = 0.0
                        },
                        new
                        {
                            MaThucPham = 2,
                            ChatBeo = 1000.0,
                            ChatBot = 11000.0,
                            ChatDam = 5000.0,
                            DonViTinh = "Kg",
                            HinhAnh = "",
                            MaDanhMuc = 4,
                            NangLuong = 73000.0,
                            TenThucPham = "Đậu cô ve",
                            TonKho = 0.0
                        },
                        new
                        {
                            MaThucPham = 3,
                            ChatBeo = 7000.0,
                            ChatBot = 0.0,
                            ChatDam = 19000.0,
                            DonViTinh = "Kg",
                            HinhAnh = "",
                            MaDanhMuc = 2,
                            NangLuong = 139000.0,
                            TenThucPham = "Thịt heo nạc",
                            TonKho = 0.0
                        },
                        new
                        {
                            MaThucPham = 4,
                            ChatBeo = 0.0,
                            ChatBot = 11000.0,
                            ChatDam = 900.0,
                            DonViTinh = "Kg",
                            HinhAnh = "",
                            MaDanhMuc = 4,
                            NangLuong = 48000.0,
                            TenThucPham = "Nhãn",
                            TonKho = 0.0
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThuocSoGiun", b =>
                {
                    b.Property<int>("MaThuocSoGiun")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThuocSoGiun"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThuocSoGiun")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaThuocSoGiun");

                    b.ToTable("ThuocSoGiuns", (string)null);

                    b.HasData(
                        new
                        {
                            MaThuocSoGiun = 1,
                            GhiChu = "Để tẩy giun, trẻ chỉ cần uống một lần duy nhất gồm viên nén định lượng 500 mg vào buổi sáng để đạt hiệu quả tẩy giun tối ưu. ",
                            TenThuocSoGiun = "Thuốc tẩy giun Mebendazol"
                        },
                        new
                        {
                            MaThuocSoGiun = 2,
                            GhiChu = "Để tính toán liều dùng phù hợp, cha mẹ cần dựa trên cân nặng của trẻ với lượng tương ứng là 10mg cho mỗi kg cân nặng, trẻ cần uống 1 liều duy nhất để tẩy giun hiệu quả.",
                            TenThuocSoGiun = "Thuốc tẩy giun Pyrantel"
                        },
                        new
                        {
                            MaThuocSoGiun = 3,
                            GhiChu = "Loại thuốc tẩy giun này được sản xuất ở dạng viên nén 400mg uống duy nhất 1 lần, được khuyến cáo nên sử dụng vào buổi sáng.",
                            TenThuocSoGiun = "Thuốc tẩy giun Albendazole"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.Vaccine", b =>
                {
                    b.Property<int>("MaVaccine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVaccine"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenVaccine")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaVaccine");

                    b.ToTable("Vaccines", (string)null);

                    b.HasData(
                        new
                        {
                            MaVaccine = 1,
                            GhiChu = "",
                            TenVaccine = "Vắc xin cúm mùa"
                        },
                        new
                        {
                            MaVaccine = 2,
                            GhiChu = "",
                            TenVaccine = "Vắc xin phòng viêm phổi, viêm tai giữa, viêm màng não, nhiễm khuẩn huyết do phế cầu khuẩn"
                        },
                        new
                        {
                            MaVaccine = 3,
                            GhiChu = "",
                            TenVaccine = "Vắc xin Bạch hầu – Ho gà – Uốn ván"
                        },
                        new
                        {
                            MaVaccine = 4,
                            GhiChu = "",
                            TenVaccine = "Vắc xin Sởi – Quai bị – Rubella"
                        },
                        new
                        {
                            MaVaccine = 5,
                            GhiChu = "",
                            TenVaccine = "Vắc xin phòng viêm phổi, viêm tai giữa, viêm màng não, nhiễm khuẩn huyết do não mô cầu khuẩn"
                        },
                        new
                        {
                            MaVaccine = 6,
                            GhiChu = "",
                            TenVaccine = "Vắc xin Thủy đậu"
                        },
                        new
                        {
                            MaVaccine = 7,
                            GhiChu = "",
                            TenVaccine = "Vắc xin Viêm não Nhật Bản"
                        },
                        new
                        {
                            MaVaccine = 8,
                            GhiChu = "",
                            TenVaccine = "Vắc xin Viêm gan A+B"
                        },
                        new
                        {
                            MaVaccine = 9,
                            GhiChu = "",
                            TenVaccine = "Vắc xin thương hàn"
                        },
                        new
                        {
                            MaVaccine = 10,
                            GhiChu = "",
                            TenVaccine = "Vắc xin tả"
                        },
                        new
                        {
                            MaVaccine = 11,
                            GhiChu = "",
                            TenVaccine = "Vắc xin dại"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.Vitamin", b =>
                {
                    b.Property<int>("MaVitamin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVitamin"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenVitamin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaVitamin");

                    b.ToTable("Vitamins", (string)null);

                    b.HasData(
                        new
                        {
                            MaVitamin = 1,
                            GhiChu = "Uống",
                            TenVitamin = "Calci gluconat"
                        },
                        new
                        {
                            MaVitamin = 2,
                            GhiChu = "Uống",
                            TenVitamin = "Vitamin A "
                        },
                        new
                        {
                            MaVitamin = 3,
                            GhiChu = "Uống",
                            TenVitamin = "Vitamin A + D"
                        },
                        new
                        {
                            MaVitamin = 4,
                            GhiChu = "Uống",
                            TenVitamin = "Thiamin hydroclorid"
                        },
                        new
                        {
                            MaVitamin = 5,
                            GhiChu = "Uống",
                            TenVitamin = "Vitamin B2 "
                        },
                        new
                        {
                            MaVitamin = 6,
                            GhiChu = "Uống",
                            TenVitamin = "Vitamin B6"
                        },
                        new
                        {
                            MaVitamin = 7,
                            GhiChu = "Uống",
                            TenVitamin = "Vitamin C"
                        },
                        new
                        {
                            MaVitamin = 8,
                            GhiChu = "Uống",
                            TenVitamin = "Vitamin PP"
                        });
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ChiTietPhieuNhapThucPham", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.PhieuNhapThucPham", "PhieuNhapThucPham")
                        .WithMany("ChiTietPhieuNhapThucPhams")
                        .HasForeignKey("MaPhieuNhapThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.ThucPham", "ThucPham")
                        .WithMany("ChiTietPhieuNhapThucPhams")
                        .HasForeignKey("MaThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.PhieuXuatThucPham", null)
                        .WithMany("ChiTietPhieuNhapThucPhams")
                        .HasForeignKey("PhieuXuatThucPhamMaPhieuXuatThucPham");

                    b.Navigation("PhieuNhapThucPham");

                    b.Navigation("ThucPham");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ChiTietPhieuXuatThucPham", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.PhieuXuatThucPham", "PhieuXuatThucPham")
                        .WithMany("ChiTietPhieuXuatThucPhams")
                        .HasForeignKey("MaPhieuXuatThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.ThucPham", "ThucPham")
                        .WithMany("ChiTietPhieuXuatThucPhams")
                        .HasForeignKey("MaThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuXuatThucPham");

                    b.Navigation("ThucPham");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ChucVu", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.LoaiNhanSu", "LoaiNhanSu")
                        .WithMany("ChucVus")
                        .HasForeignKey("MaLoaiNhanSu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiNhanSu");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.DiemDanh", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.HocSinh", "HocSinh")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocSinh");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.GiaoVienChuNhiem", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.LopHoc", "LopHoc")
                        .WithMany("GiaoVienChuNhiems")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.NhanSu", "NhanSu")
                        .WithMany("GiaoVienChuNhiems")
                        .HasForeignKey("MaNhanSu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LopHoc");

                    b.Navigation("NhanSu");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.HocSinh", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.KhoiLop", "KhoiLop")
                        .WithMany("HocSinhs")
                        .HasForeignKey("MaKhoiLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.LopHoc", "LopHoc")
                        .WithMany("HocSinhs")
                        .HasForeignKey("MaLopHoc");

                    b.Navigation("KhoiLop");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.KhamSucKhoe", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.HocSinh", "HocSinh")
                        .WithMany("KhamSucKhoes")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocSinh");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.LopHoc", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.KhoiLop", "KhoiLop")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaKhoiLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.NienHoc", "NienHoc")
                        .WithMany("LopHocs")
                        .HasForeignKey("MaNienHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoiLop");

                    b.Navigation("NienHoc");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.MonAnThucPham", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.MonAn", "MonAn")
                        .WithMany("MonAnThucPhams")
                        .HasForeignKey("MaMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.ThucPham", "ThucPham")
                        .WithMany("MonAnThucPhams")
                        .HasForeignKey("MaThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonAn");

                    b.Navigation("ThucPham");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.NhanSu", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.ChucVu", "ChucVu")
                        .WithMany("NhanSus")
                        .HasForeignKey("MaChucVu");

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.KhoiLop", "KhoiLop")
                        .WithMany("NhanSus")
                        .HasForeignKey("MaKhoiLop");

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.LoaiNhanSu", "LoaiNhanSu")
                        .WithMany("NhanSus")
                        .HasForeignKey("MaLoaiNhanSu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanSus")
                        .HasForeignKey("MaPhongBan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");

                    b.Navigation("KhoiLop");

                    b.Navigation("LoaiNhanSu");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.NhanSuPhanQuyen", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.NhanSu", "NhanSu")
                        .WithMany("NhanSuPhanQuyens")
                        .HasForeignKey("MaNhanSu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.PhanQuyen", "PhanQuyen")
                        .WithMany("NhanSuPhanQuyens")
                        .HasForeignKey("MaQuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanSu");

                    b.Navigation("PhanQuyen");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuNhapThucPham", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.NhanSu", "NguoiNhap")
                        .WithMany("PhieuNhapThucPhams")
                        .HasForeignKey("MaNguoiNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiNhap");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuSoGiun", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.HocSinh", "HocSinh")
                        .WithMany("PhieuSoGiuns")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.ThuocSoGiun", "ThuocSoGiun")
                        .WithMany("PhieuSoGiuns")
                        .HasForeignKey("MaThuocSoGiun")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("ThuocSoGiun");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuTiemVaccine", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.HocSinh", "HocSinh")
                        .WithMany("PhieuTiemVaccines")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.Vaccine", "Vaccine")
                        .WithMany("PhieuTiemVaccines")
                        .HasForeignKey("MaVaccine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuUongVitamin", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.HocSinh", "HocSinh")
                        .WithMany("PhieuUongVitamins")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.Vitamin", "Vitamin")
                        .WithMany("PhieuUongVitamins")
                        .HasForeignKey("MaVitamin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("Vitamin");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuXuatThucPham", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.NhanSu", "NguoiXuat")
                        .WithMany("PhieuXuatThucPhams")
                        .HasForeignKey("MaNguoiXuat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiXuat");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucDon", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.DanhMucThucDon", "DanhMucThucDon")
                        .WithMany("ThucDons")
                        .HasForeignKey("MaDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMucThucDon");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucDonMonAn", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.MonAn", "MonAn")
                        .WithMany("ThucDonMonAns")
                        .HasForeignKey("MaMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.ThucDon", "ThucDon")
                        .WithMany("ThucDonMonAns")
                        .HasForeignKey("MaThucDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonAn");

                    b.Navigation("ThucDon");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucPham", b =>
                {
                    b.HasOne("TruongMamNon.BackendApi.Data.Entities.DanhMucThucPham", "DanhMucThucPham")
                        .WithMany("ThucPhams")
                        .HasForeignKey("MaDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMucThucPham");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ChucVu", b =>
                {
                    b.Navigation("NhanSus");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.DanhMucThucDon", b =>
                {
                    b.Navigation("ThucDons");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.DanhMucThucPham", b =>
                {
                    b.Navigation("ThucPhams");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.HocSinh", b =>
                {
                    b.Navigation("DiemDanhs");

                    b.Navigation("KhamSucKhoes");

                    b.Navigation("PhieuSoGiuns");

                    b.Navigation("PhieuTiemVaccines");

                    b.Navigation("PhieuUongVitamins");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.KhoiLop", b =>
                {
                    b.Navigation("HocSinhs");

                    b.Navigation("LopHocs");

                    b.Navigation("NhanSus");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.LoaiNhanSu", b =>
                {
                    b.Navigation("ChucVus");

                    b.Navigation("NhanSus");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.LopHoc", b =>
                {
                    b.Navigation("GiaoVienChuNhiems");

                    b.Navigation("HocSinhs");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.MonAn", b =>
                {
                    b.Navigation("MonAnThucPhams");

                    b.Navigation("ThucDonMonAns");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.NhanSu", b =>
                {
                    b.Navigation("GiaoVienChuNhiems");

                    b.Navigation("NhanSuPhanQuyens");

                    b.Navigation("PhieuNhapThucPhams");

                    b.Navigation("PhieuXuatThucPhams");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.NienHoc", b =>
                {
                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhanQuyen", b =>
                {
                    b.Navigation("NhanSuPhanQuyens");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuNhapThucPham", b =>
                {
                    b.Navigation("ChiTietPhieuNhapThucPhams");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhieuXuatThucPham", b =>
                {
                    b.Navigation("ChiTietPhieuNhapThucPhams");

                    b.Navigation("ChiTietPhieuXuatThucPhams");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.PhongBan", b =>
                {
                    b.Navigation("NhanSus");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucDon", b =>
                {
                    b.Navigation("ThucDonMonAns");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThucPham", b =>
                {
                    b.Navigation("ChiTietPhieuNhapThucPhams");

                    b.Navigation("ChiTietPhieuXuatThucPhams");

                    b.Navigation("MonAnThucPhams");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.ThuocSoGiun", b =>
                {
                    b.Navigation("PhieuSoGiuns");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.Vaccine", b =>
                {
                    b.Navigation("PhieuTiemVaccines");
                });

            modelBuilder.Entity("TruongMamNon.BackendApi.Data.Entities.Vitamin", b =>
                {
                    b.Navigation("PhieuUongVitamins");
                });
#pragma warning restore 612, 618
        }
    }
}
